# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  pull-requests: write

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
        cache: true

    - name: Lint
      run: |
        go install golang.org/x/lint/golint@latest
        golint ./...

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Test
      run: go test -v ./...

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Build
      run: go build -v -o app

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: go-build
        path: ./app  

  changelog:
    runs-on: ubuntu-latest
    needs:
      - lint
      - build
      - test

    outputs:
      changelog: ${{ steps.changelog.outputs.clean_changelog }}
      tag: ${{ steps.changelog.outputs.tag }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Generate Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v6
        with:
          github-token: ${{ secrets.GH_PAT }}
          output-file: false  # Do not commit changelog file
          create-summary: true

      - name: Create Git Tag
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a ${{ steps.changelog.outputs.tag }} -m "Release ${{ steps.changelog.outputs.tag }}"
          git push origin ${{ steps.changelog.outputs.tag }}
  
  release:
    runs-on: ubuntu-latest
    needs: changelog

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: go-build
          path: ./

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.changelog.outputs.tag }}
          name: "Release ${{ needs.changelog.outputs.tag }}"
          body: "${{ needs.changelog.outputs.changelog }}"
          draft: false
          prerelease: false
          generate_release_notes: true
          files: ./app
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}